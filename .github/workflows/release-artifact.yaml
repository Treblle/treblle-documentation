name: "Release Artifact"

on:
    push:
        tags:
            - "*"
        branches:
            - "develop"

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: false

jobs:
    build:
        name: Build application artifact
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4
              with:
                  fetch-depth: 2

            - name: Install dependencies
              uses: ./.github/composite-actions/install

            - name: Run build
              run: pnpm build --mode artifacts

            - name: Create artifact
              run: |
                  cd dist/
                  zip -r ../dist.zip ./
            - name: Upload artifact
              uses: actions/upload-artifact@v4
              with:
                  name: frontend
                  path: |
                      dist.zip
    publish:
        name: Publish artifact
        runs-on: ubuntu-latest
        needs:
            - build
        permissions:
            contents: read
            id-token: write
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Configure AWS Credentials
              uses: aws-actions/configure-aws-credentials@v4
              with:
                  role-to-assume: ${{ vars.AWS_IAM_ROLE }}
                  aws-region: ${{ vars.AWS_REGION }}

            - name: Download artifact
              uses: actions/download-artifact@v4
              with:
                  name: frontend

            - name: Upload to S3
              run: |
                  aws s3 cp dist.zip s3://${{ vars.AWS_S3_BUCKET_NAME }}/frontend/${{ github.ref_name }}.zip

    deploy:
        name: Deploy to sandbox
        runs-on: ubuntu-latest
        permissions:
            contents: read
            actions: read
            id-token: write
        needs:
            - publish
        if: ${{ github.ref_name == 'develop' }}
        environment: "sandbox"
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Download artifact
              uses: actions/download-artifact@v4
              with:
                  name: frontend
            - name: Configure AWS Credentials
              uses: aws-actions/configure-aws-credentials@v4
              with:
                  role-to-assume: ${{ vars.AWS_IAM_ROLE }}
                  aws-region: ${{ vars.AWS_REGION }}
            - name: Replace variables
              run: |
                  set -a
                  source <(echo "${{ vars.APP_CONFIG }}" | base64 -d)
                  set +a
                  unzip -d dist/ dist.zip
                  time for VARIABLE in $(cut -f1 -d\= ./.env.artifacts); do echo "Replacing ${VARIABLE} with ${!VARIABLE} in all dist/ files" ; grep -rl "${VARIABLE}_PLACEHOLDER" dist/ | xargs sed -i "s|${VARIABLE}_PLACEHOLDER|${!VARIABLE}|g" || true ; done
            - name: Deploy application
              run: |
                  cd dist/
                  aws s3 sync --delete ./ s3://${{ vars.AWS_S3_BUCKET_NAME }}/
                  aws cloudfront create-invalidation --distribution-id ${{ vars.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"
